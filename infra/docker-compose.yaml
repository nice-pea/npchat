#volumes:
#  npc.pgsql.data:

networks:
  proxy:
   external: true
  npc.network:
#    external: true

services:
  npc.npchat:
    container_name: npc.npchat
    image: npchat:${IMAGE_TAG}
    restart: on-failure:3
    networks:
      npc.network:
      proxy:
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.0:8080/ping"]
      interval: 3s
      timeout: 1s
      retries: 5
    ports:
      - "8465:8080"
    command:
      - "--http-addr"
      - ":8080"
      - "--log-level"
      - "warn"
      - "--pgsql-dsn"
      - "${PGSQL_DSN}"
      - "--oauth-google-key"
      - "${OAUTH_GOOGLE_KEY}"
      - "--oauth-google-secret"
      - "${OAUTH_GOOGLE_SECRET}"
      - "--oauth-google-callback"
      - "${OAUTH_GOOGLE_CALLBACK}"
      - "--oauth-github-key"
      - "${OAUTH_GITHUB_KEY}"
      - "--oauth-github-secret"
      - "${OAUTH_GITHUB_SECRET}"
      - "--oauth-github-callback"
      - "${OAUTH_GITHUB_CALLBACK}"

  test.npchat:
    container_name: npc.test.npchat
    build:
      context: ../
      dockerfile: ./Containerfile
    networks:
      npc.network:
    ports:
      - "8080:8080"
    depends_on:
      test.pgsql:
        condition: service_healthy
    command:
      - "--http-addr"
      - ":8080"
      - "--pgsql-dsn"
      - "postgresql://postgres:postgres@test.pgsql:5432/test_npc_db?sslmode=disable"
      - "--log-level"
      - "debug"

# https://github.com/docker-library/docs/blob/master/postgres/README.md
  test.pgsql:
    container_name: npc.test.pgsql
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_npc_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgsql/init:/docker-entrypoint-initdb.d
    networks:
      npc.network:
#    volumes:
#      - npc.pgsql.data:/var/lib/postgresql/data
